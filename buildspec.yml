version: 0.2

env:
  parameter-store:
    AWS_ACCOUNT_ID: "/kmj-app/prod/AWS_ACCOUNT_ID"
    AWS_REGION: "/kmj-app/prod/AWS_REGION"
    IMAGE_REPO_NAME: "/kmj-app/prod/ECR_REPO_NAME"
    CONTAINER_NAME: "/kmj-app/prod/ECS_CONTAINER_NAME"

phases:
  pre_build:
    commands:
      # Parameter Store에서 가져온 변수($AWS_REGION, $AWS_ACCOUNT_ID)를 사용합니다.
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
      
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json

cache:
  paths:
    - '/root/.cache/pip/**/*'